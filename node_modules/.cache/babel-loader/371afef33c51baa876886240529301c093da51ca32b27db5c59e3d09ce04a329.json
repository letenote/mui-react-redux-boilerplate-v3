{"ast":null,"code":"import _createForOfIteratorHelper from \"/Users/rezaaditya/Documents/github/mui-app-v3/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _classCallCheck from \"/Users/rezaaditya/Documents/github/mui-app-v3/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/rezaaditya/Documents/github/mui-app-v3/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"/Users/rezaaditya/Documents/github/mui-app-v3/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _inherits from \"/Users/rezaaditya/Documents/github/mui-app-v3/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/rezaaditya/Documents/github/mui-app-v3/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n  return target;\n}\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nimport { DEFAULT_THEME, LEFT_EDGE_SIDEBAR_ID, RIGHT_EDGE_SIDEBAR_ID } from \"../utils/constant\";\nimport { pickNearestBreakpoint } from \"../utils/pickNearestBreakpoint\";\nimport { combineBreakpoints } from \"../utils/combineBreakpoints\";\nimport { createWidthInterface } from \"../Width/WidthModel\";\nimport { toValidCssValue } from \"../utils/toValidCssValue\";\nimport { ResponsiveBuilder } from \"../shared/ResponsiveBuilder\";\nexport var HeaderBuilder = /*#__PURE__*/function (_ResponsiveBuilder) {\n  _inherits(HeaderBuilder, _ResponsiveBuilder);\n  var _super = _createSuper(HeaderBuilder);\n  function HeaderBuilder(params) {\n    var _this;\n    _classCallCheck(this, HeaderBuilder);\n    _this = _super.call(this, params);\n    _defineProperty(_assertThisInitialized(_this), \"effectedBy\", {});\n    return _this;\n  }\n  _createClass(HeaderBuilder, [{\n    key: \"isClipped\",\n    value: function isClipped(clippableId, breakpoint) {\n      var headerBreakpointConfig = pickNearestBreakpoint(this.config, breakpoint);\n      if (typeof (headerBreakpointConfig === null || headerBreakpointConfig === void 0 ? void 0 : headerBreakpointConfig.clipped) === \"boolean\" && headerBreakpointConfig.clipped) {\n        return true;\n      }\n      return typeof (headerBreakpointConfig === null || headerBreakpointConfig === void 0 ? void 0 : headerBreakpointConfig.clipped) === \"object\" && (headerBreakpointConfig === null || headerBreakpointConfig === void 0 ? void 0 : headerBreakpointConfig.clipped[clippableId]);\n    }\n  }, {\n    key: \"isAboveSomeEdgeSidebar\",\n    value: function isAboveSomeEdgeSidebar(breakpoint) {\n      var headerBreakpointConfig = pickNearestBreakpoint(this.config, breakpoint);\n      if (!headerBreakpointConfig) return false;\n      var clipped = headerBreakpointConfig.clipped;\n      if (typeof clipped === \"boolean\") {\n        return clipped;\n      }\n      return !!(clipped !== null && clipped !== void 0 && clipped.leftEdgeSidebar) || !!(clipped !== null && clipped !== void 0 && clipped.rightEdgeSidebar);\n    }\n  }, {\n    key: \"getOffsetHeight\",\n    value: function getOffsetHeight() {\n      return this.generateSxWithHidden({\n        // https://github.com/mui-org/material-ui/blob/next/packages/material-ui-system/src/sizing.js#L5\n        hiddenValue: \"0px\",\n        // don't use 0 as number because it will become 0%\n        assignValue: function assignValue(breakpointConfig) {\n          return breakpointConfig.position === \"fixed\" ? breakpointConfig.height : \"0px\";\n        }\n      });\n    }\n  }, {\n    key: \"getSxHeight\",\n    value: function getSxHeight() {\n      var result = this.generateSxWithHidden({\n        assignValue: function assignValue(breakpointConfig) {\n          return breakpointConfig.height;\n        },\n        // https://github.com/mui-org/material-ui/blob/next/packages/material-ui-system/src/sizing.js#L5\n        hiddenValue: \"0px\" // don't use 0 as number because it will become 0%\n      });\n\n      return _objectSpread({}, Object.keys(result).length && {\n        height: result\n      });\n    }\n  }, {\n    key: \"getSxMarginHorizontal\",\n    value: function getSxMarginHorizontal() {\n      var marginLeft = {};\n      var _this$effectedBy = this.effectedBy,\n        leftEdgeSidebar = _this$effectedBy.leftEdgeSidebar,\n        rightEdgeSidebar = _this$effectedBy.rightEdgeSidebar;\n      if (leftEdgeSidebar) {\n        var occupiedSpace = leftEdgeSidebar === null || leftEdgeSidebar === void 0 ? void 0 : leftEdgeSidebar.getOccupiedSpace();\n        var breakpoints = this.mergeBreakpoints(occupiedSpace);\n        var _iterator = _createForOfIteratorHelper(breakpoints),\n          _step;\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var bp = _step.value;\n            marginLeft[bp] = this.isClipped(LEFT_EDGE_SIDEBAR_ID, bp) ? \"0px\" : toValidCssValue(pickNearestBreakpoint(occupiedSpace, bp));\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n      }\n      var marginRight = {};\n      if (rightEdgeSidebar) {\n        var _occupiedSpace = rightEdgeSidebar === null || rightEdgeSidebar === void 0 ? void 0 : rightEdgeSidebar.getOccupiedSpace();\n        var _breakpoints = this.mergeBreakpoints(_occupiedSpace);\n        var _iterator2 = _createForOfIteratorHelper(_breakpoints),\n          _step2;\n        try {\n          for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n            var _bp = _step2.value;\n            marginRight[_bp] = this.isClipped(RIGHT_EDGE_SIDEBAR_ID, _bp) ? \"0px\" : toValidCssValue(pickNearestBreakpoint(_occupiedSpace, _bp));\n          }\n        } catch (err) {\n          _iterator2.e(err);\n        } finally {\n          _iterator2.f();\n        }\n      }\n      return _objectSpread(_objectSpread({}, Object.keys(marginLeft).length && {\n        marginLeft: marginLeft\n      }), Object.keys(marginRight).length && {\n        marginRight: marginRight\n      });\n    }\n  }, {\n    key: \"getSxWidth\",\n    value: function getSxWidth() {\n      var _leftEdgeSidebar$getO, _rightEdgeSidebar$get;\n      var result = {};\n      var _this$effectedBy2 = this.effectedBy,\n        leftEdgeSidebar = _this$effectedBy2.leftEdgeSidebar,\n        rightEdgeSidebar = _this$effectedBy2.rightEdgeSidebar;\n      var leftOccupiedSpace = (_leftEdgeSidebar$getO = leftEdgeSidebar === null || leftEdgeSidebar === void 0 ? void 0 : leftEdgeSidebar.getOccupiedSpace()) !== null && _leftEdgeSidebar$getO !== void 0 ? _leftEdgeSidebar$getO : {};\n      var rightOccupiedSpace = (_rightEdgeSidebar$get = rightEdgeSidebar === null || rightEdgeSidebar === void 0 ? void 0 : rightEdgeSidebar.getOccupiedSpace()) !== null && _rightEdgeSidebar$get !== void 0 ? _rightEdgeSidebar$get : {};\n      var breakpoints = this.mergeBreakpoints(combineBreakpoints(leftOccupiedSpace, rightOccupiedSpace));\n      var _iterator3 = _createForOfIteratorHelper(breakpoints),\n        _step3;\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var key = _step3.value;\n          var bp = key;\n          var effectLeft = createWidthInterface(0);\n          if (leftEdgeSidebar) {\n            if (!this.isClipped(LEFT_EDGE_SIDEBAR_ID, bp)) {\n              effectLeft = createWidthInterface(leftEdgeSidebar.isFlexiblePersistent(bp, \"header\") ? 0 : pickNearestBreakpoint(leftOccupiedSpace, bp));\n            }\n          }\n          var effectRight = createWidthInterface(0);\n          if (rightEdgeSidebar) {\n            if (!this.isClipped(RIGHT_EDGE_SIDEBAR_ID, bp)) {\n              effectRight = createWidthInterface(rightEdgeSidebar.isFlexiblePersistent(bp, \"header\") ? 0 : pickNearestBreakpoint(rightOccupiedSpace, bp));\n            }\n          }\n          result[bp] = effectLeft.combine(effectRight).getStyle().width;\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n      return _objectSpread({}, Object.keys(result).length && {\n        width: result\n      });\n    }\n  }, {\n    key: \"getSxZIndex\",\n    value: function getSxZIndex() {\n      var _this2 = this;\n      var theme = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : DEFAULT_THEME;\n      var result = this.generateSx(function (config, bp) {\n        var _config$layer;\n        return _this2.isAboveSomeEdgeSidebar(bp) ? theme.zIndex.drawer + 10 + ((_config$layer = config.layer) !== null && _config$layer !== void 0 ? _config$layer : 0) : theme.zIndex.appBar;\n      }, theme.zIndex.appBar);\n      return _objectSpread({}, Object.keys(result).length && {\n        zIndex: result\n      });\n    }\n  }, {\n    key: \"getSxProps\",\n    value: function getSxProps() {\n      var theme = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : DEFAULT_THEME;\n      var sxTop = this.generateSx(function (config) {\n        return config.top;\n      }, 0);\n      var sxDisplay = this.getSxDisplay(\"flex\");\n      var displayKeys = Object.keys(sxDisplay);\n      var shouldAttachDisplay = displayKeys.length > 1 || displayKeys.length === 1 && displayKeys[0] !== \"xs\";\n      return _objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread({\n        position: this.generateSx(function (config) {\n          return config.position;\n        })\n      }, Object.keys(sxTop).length && {\n        top: sxTop\n      }), shouldAttachDisplay && {\n        display: sxDisplay\n      }), this.getSxHeight()), this.getSxWidth()), this.getSxMarginHorizontal()), this.getSxZIndex(theme));\n    }\n  }]);\n  return HeaderBuilder;\n}(ResponsiveBuilder);","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}