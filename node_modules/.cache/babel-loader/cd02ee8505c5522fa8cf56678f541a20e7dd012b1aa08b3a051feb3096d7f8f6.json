{"ast":null,"code":"import { plusCalc, subtractCalc } from \"../utils/calc\";\nfunction getMaxFloatHeight(configs) {\n  if (!configs.length) return 0;\n  if (configs.length === 1) return plusCalc(configs[0].height, configs[0].top);\n  return \"max(\".concat(configs.map(c => plusCalc(c.height, c.top)).join(\", \"), \")\");\n}\nfunction sumHeight(configs) {\n  if (!configs.length) return 0;\n  return plusCalc(...configs.map(c => c.height));\n}\nexport var StackedHeaders = configs => {\n  var nonRelativeConfigs = [];\n  configs.forEach(c => {\n    if (!!c && c.position !== \"relative\") {\n      nonRelativeConfigs.push(c);\n    }\n  });\n  var maxNonRelativeHeight = getMaxFloatHeight(nonRelativeConfigs);\n  var totalHeight = sumHeight(configs.filter(c => !!c)); // for offset height\n\n  var diffHeight = subtractCalc(totalHeight, maxNonRelativeHeight); // for -marginTop\n\n  return {\n    totalHeight,\n    diffHeight\n  };\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}