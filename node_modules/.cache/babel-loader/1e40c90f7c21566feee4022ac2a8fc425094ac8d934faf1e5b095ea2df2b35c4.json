{"ast":null,"code":"import _toConsumableArray from \"/Users/rezaaditya/Documents/github/mui-app-v3/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport { BREAKPOINT_KEYS } from \"./muiBreakpoints\";\nexport var mapWidthToScreen = function mapWidthToScreen(width, breakpoints) {\n  if (!width) return undefined;\n  var screen = \"\";\n  var found = false;\n  var newKeys = _toConsumableArray(BREAKPOINT_KEYS);\n  newKeys.reverse().forEach(function (breakpoint) {\n    if (width >= breakpoints.values[breakpoint] && !found) {\n      screen = breakpoint;\n      found = true;\n    }\n  });\n  return screen;\n};","map":{"version":3,"names":["BREAKPOINT_KEYS","mapWidthToScreen","width","breakpoints","undefined","screen","found","newKeys","reverse","forEach","breakpoint","values"],"sources":["/Users/rezaaditya/Documents/github/mui-app-v3/node_modules/@mui-treasury/layout/esm/utils/mapWidthToScreen.js"],"sourcesContent":["import { BREAKPOINT_KEYS } from \"./muiBreakpoints\";\nexport var mapWidthToScreen = (width, breakpoints) => {\n  if (!width) return undefined;\n  var screen = \"\";\n  var found = false;\n  var newKeys = [...BREAKPOINT_KEYS];\n  newKeys.reverse().forEach(breakpoint => {\n    if (width >= breakpoints.values[breakpoint] && !found) {\n      screen = breakpoint;\n      found = true;\n    }\n  });\n  return screen;\n};"],"mappings":";AAAA,SAASA,eAAe,QAAQ,kBAAkB;AAClD,OAAO,IAAIC,gBAAgB,GAAG,SAAnBA,gBAAgB,CAAIC,KAAK,EAAEC,WAAW,EAAK;EACpD,IAAI,CAACD,KAAK,EAAE,OAAOE,SAAS;EAC5B,IAAIC,MAAM,GAAG,EAAE;EACf,IAAIC,KAAK,GAAG,KAAK;EACjB,IAAIC,OAAO,sBAAOP,eAAe,CAAC;EAClCO,OAAO,CAACC,OAAO,EAAE,CAACC,OAAO,CAAC,UAAAC,UAAU,EAAI;IACtC,IAAIR,KAAK,IAAIC,WAAW,CAACQ,MAAM,CAACD,UAAU,CAAC,IAAI,CAACJ,KAAK,EAAE;MACrDD,MAAM,GAAGK,UAAU;MACnBJ,KAAK,GAAG,IAAI;IACd;EACF,CAAC,CAAC;EACF,OAAOD,MAAM;AACf,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}