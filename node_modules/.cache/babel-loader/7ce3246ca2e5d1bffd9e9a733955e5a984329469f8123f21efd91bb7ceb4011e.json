{"ast":null,"code":"import React from \"react\";\nimport { styled } from \"@mui/material/styles\";\nimport { useLayoutCtx } from \"../Root/Root\";\nimport { useScrollY } from \"../hooks/useScrollY\";\nimport { useScreen } from \"../hooks/useScreen\";\nimport { HeadersCompiler } from \"../MultiHeaders/HeadersCompiler\";\nimport { pickNearestBreakpoint } from \"../utils/pickNearestBreakpoint\";\nvar OffsetRoot = styled(\"div\", {\n  name: \"InsetSidebarOffset\",\n  slot: \"Root\"\n})(function (_ref) {\n  var theme = _ref.theme;\n  return {\n    transition: theme.transitions.create([\"all\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.short\n    })\n  };\n});\nexport var InsetOffset = function InsetOffset(_ref2) {\n  var sidebar = _ref2.sidebar;\n  var _useLayoutCtx = useLayoutCtx(),\n    builder = _useLayoutCtx.builder;\n  var screen = useScreen();\n  var insetConfig = pickNearestBreakpoint(sidebar === null || sidebar === void 0 ? void 0 : sidebar.config, screen); // @ts-ignore\n\n  var _ref3 = insetConfig !== null && insetConfig !== void 0 ? insetConfig : {},\n    headerMagnetEnabled = _ref3.headerMagnetEnabled; // dont't calculate scrollY if not magnet for performance\n\n  var scrollY = useScrollY(!headerMagnetEnabled);\n  var _HeadersCompiler$getA = HeadersCompiler([builder.header, builder.topHeader, builder.subheader]).getAllHeight(),\n    totalHeight = _HeadersCompiler$getA.totalHeight,\n    diffHeight = _HeadersCompiler$getA.diffHeight; // header magnet feature\n\n  var style = {};\n  if (headerMagnetEnabled) {\n    var maxOffset = diffHeight && screen ? pickNearestBreakpoint(diffHeight, screen) : 0;\n    style.marginTop = \"max(-\".concat(scrollY !== null && scrollY !== void 0 ? scrollY : 0, \"px, calc(-1 * \").concat(maxOffset, \"))\");\n  }\n  if ((insetConfig === null || insetConfig === void 0 ? void 0 : insetConfig.position) !== \"fixed\") {\n    return null;\n  }\n  return /*#__PURE__*/React.createElement(OffsetRoot, {\n    sx: {\n      display: sidebar === null || sidebar === void 0 ? void 0 : sidebar.getSxDisplay(\"initial\"),\n      height: totalHeight\n    },\n    style: style\n  });\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}