{"ast":null,"code":"import { BREAKPOINT_KEYS } from \"./muiBreakpoints\";\n\n/**\n *\n *\n * @param getValue the value the result object (undefined will be remove from result)\n * @param options\n *  - breakpoints: list of Breakpoints to be iterate\n *  - initialValue: if provided, will be used to compare if the value from getValue should be added or not\n * @returns object that can be passed to <MuiComponent sx={...} />\n */\nexport var createSxResult = (getValue, options) => {\n  var {\n    breakpoints = BREAKPOINT_KEYS,\n    initialValue\n  } = options !== null && options !== void 0 ? options : {};\n  var result = {};\n  var lastValue = undefined;\n  for (var _bp of breakpoints) {\n    var value = getValue(_bp, lastValue);\n    if (value !== undefined) {\n      // only assign value if not undefined\n      if (lastValue === undefined) {\n        // 1st valid value\n        result[_bp] = value;\n        lastValue = value;\n        if (initialValue !== undefined && initialValue === value) {\n          // if same as initial, deleted from object\n          delete result[_bp];\n        }\n      } else {\n        if (lastValue !== value) {\n          // next valid value that is not the same as lastValue and so on\n          result[_bp] = value;\n          lastValue = value;\n        }\n      }\n    }\n  }\n  return result;\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}