{"ast":null,"code":"function ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n  return target;\n}\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nimport { BREAKPOINT_KEYS } from \"../utils/muiBreakpoints\";\nimport { pickNearestBreakpoint } from \"../utils/pickNearestBreakpoint\";\nimport { StackedHeaders } from \"./StackedHeaders\";\nexport var HeadersCompiler = headers => {\n  var validHeaders = headers.filter(h => !!h);\n  function getResult(modifyConfigAtBreakpoint) {\n    var result = {\n      totalHeight: {},\n      diffHeight: {}\n    };\n    var prevHidden = Array(validHeaders.length).fill(false); // keep track of hidden in previous breakpoint\n\n    var _loop = function _loop(_bp) {\n      var configs = [];\n      var shouldCalculate = false;\n      shouldCalculate = prevHidden.some(bool => !!bool);\n      validHeaders.forEach(builder => {\n        if (builder.config[_bp]) {\n          shouldCalculate = true;\n        }\n      });\n      if (shouldCalculate) {\n        validHeaders.forEach((builder, index) => {\n          var breakpointConfig = pickNearestBreakpoint(builder.config, _bp);\n          if (builder.isHidden(_bp)) {\n            prevHidden[index] = true;\n            if (breakpointConfig) {\n              configs.push(_objectSpread(_objectSpread({}, breakpointConfig), {}, {\n                height: 0\n              }));\n            }\n          } else {\n            if (prevHidden[index]) {\n              prevHidden[index] = false;\n            }\n            if (breakpointConfig) {\n              configs.push(modifyConfigAtBreakpoint ? modifyConfigAtBreakpoint(_bp, builder, breakpointConfig) : breakpointConfig);\n            }\n          }\n        });\n      }\n      if (configs.length) {\n        var {\n          totalHeight,\n          diffHeight\n        } = StackedHeaders(configs);\n        if (pickNearestBreakpoint(result.totalHeight, _bp) !== totalHeight) {\n          result.totalHeight[_bp] = totalHeight;\n        }\n        if (pickNearestBreakpoint(result.diffHeight, _bp) !== diffHeight) {\n          result.diffHeight[_bp] = diffHeight;\n        }\n      }\n    };\n    for (var _bp of BREAKPOINT_KEYS) {\n      _loop(_bp);\n    }\n    return result;\n  }\n  return {\n    getClippedHeight(sidebarId) {\n      // for EdgeSidebarOffset\n      return getResult((bp, builder, config) => {\n        return _objectSpread(_objectSpread({}, config), !builder.isClipped(sidebarId, bp) && {\n          height: 0\n        });\n      });\n    },\n    getAllHeight() {\n      // for InsetSidebarOffset\n      return getResult();\n    }\n  };\n};","map":{"version":3,"names":["ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","obj","value","configurable","writable","BREAKPOINT_KEYS","pickNearestBreakpoint","StackedHeaders","HeadersCompiler","headers","validHeaders","h","getResult","modifyConfigAtBreakpoint","result","totalHeight","diffHeight","prevHidden","Array","fill","_loop","_bp","configs","shouldCalculate","some","bool","builder","config","index","breakpointConfig","isHidden","height","getClippedHeight","sidebarId","bp","isClipped","getAllHeight"],"sources":["/Users/rezaaditya/Documents/github/mui-app-v3/node_modules/@mui-treasury/layout/esm/MultiHeaders/HeadersCompiler.js"],"sourcesContent":["function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { BREAKPOINT_KEYS } from \"../utils/muiBreakpoints\";\nimport { pickNearestBreakpoint } from \"../utils/pickNearestBreakpoint\";\nimport { StackedHeaders } from \"./StackedHeaders\";\nexport var HeadersCompiler = headers => {\n  var validHeaders = headers.filter(h => !!h);\n\n  function getResult(modifyConfigAtBreakpoint) {\n    var result = {\n      totalHeight: {},\n      diffHeight: {}\n    };\n    var prevHidden = Array(validHeaders.length).fill(false); // keep track of hidden in previous breakpoint\n\n    var _loop = function _loop(_bp) {\n      var configs = [];\n      var shouldCalculate = false;\n      shouldCalculate = prevHidden.some(bool => !!bool);\n      validHeaders.forEach(builder => {\n        if (builder.config[_bp]) {\n          shouldCalculate = true;\n        }\n      });\n\n      if (shouldCalculate) {\n        validHeaders.forEach((builder, index) => {\n          var breakpointConfig = pickNearestBreakpoint(builder.config, _bp);\n\n          if (builder.isHidden(_bp)) {\n            prevHidden[index] = true;\n\n            if (breakpointConfig) {\n              configs.push(_objectSpread(_objectSpread({}, breakpointConfig), {}, {\n                height: 0\n              }));\n            }\n          } else {\n            if (prevHidden[index]) {\n              prevHidden[index] = false;\n            }\n\n            if (breakpointConfig) {\n              configs.push(modifyConfigAtBreakpoint ? modifyConfigAtBreakpoint(_bp, builder, breakpointConfig) : breakpointConfig);\n            }\n          }\n        });\n      }\n\n      if (configs.length) {\n        var {\n          totalHeight,\n          diffHeight\n        } = StackedHeaders(configs);\n\n        if (pickNearestBreakpoint(result.totalHeight, _bp) !== totalHeight) {\n          result.totalHeight[_bp] = totalHeight;\n        }\n\n        if (pickNearestBreakpoint(result.diffHeight, _bp) !== diffHeight) {\n          result.diffHeight[_bp] = diffHeight;\n        }\n      }\n    };\n\n    for (var _bp of BREAKPOINT_KEYS) {\n      _loop(_bp);\n    }\n\n    return result;\n  }\n\n  return {\n    getClippedHeight(sidebarId) {\n      // for EdgeSidebarOffset\n      return getResult((bp, builder, config) => {\n        return _objectSpread(_objectSpread({}, config), !builder.isClipped(sidebarId, bp) && {\n          height: 0\n        });\n      });\n    },\n\n    getAllHeight() {\n      // for InsetSidebarOffset\n      return getResult();\n    }\n\n  };\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}