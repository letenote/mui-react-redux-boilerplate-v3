{"ast":null,"code":"import _createForOfIteratorHelper from \"/Users/rezaaditya/Documents/github/mui-app-v3/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport { BREAKPOINT_KEYS } from \"./muiBreakpoints\";\n\n/**\n *\n *\n * @param getValue the value the result object (undefined will be remove from result)\n * @param options\n *  - breakpoints: list of Breakpoints to be iterate\n *  - initialValue: if provided, will be used to compare if the value from getValue should be added or not\n * @returns object that can be passed to <MuiComponent sx={...} />\n */\nexport var createSxResult = function createSxResult(getValue, options) {\n  var _ref = options !== null && options !== void 0 ? options : {},\n    _ref$breakpoints = _ref.breakpoints,\n    breakpoints = _ref$breakpoints === void 0 ? BREAKPOINT_KEYS : _ref$breakpoints,\n    initialValue = _ref.initialValue;\n  var result = {};\n  var lastValue = undefined;\n  var _iterator = _createForOfIteratorHelper(breakpoints),\n    _step;\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var _bp = _step.value;\n      var value = getValue(_bp, lastValue);\n      if (value !== undefined) {\n        // only assign value if not undefined\n        if (lastValue === undefined) {\n          // 1st valid value\n          result[_bp] = value;\n          lastValue = value;\n          if (initialValue !== undefined && initialValue === value) {\n            // if same as initial, deleted from object\n            delete result[_bp];\n          }\n        } else {\n          if (lastValue !== value) {\n            // next valid value that is not the same as lastValue and so on\n            result[_bp] = value;\n            lastValue = value;\n          }\n        }\n      }\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n  return result;\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}