{"ast":null,"code":"import{createStore,applyMiddleware,compose}from\"redux\";import{accessCheck,refreshingIdleTime}from\"./middleware\";import thunk from\"redux-thunk\";import AllReducer from'./reducers';var composeEnhanchers=window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__||compose;export default function configureStore(){var combineMiddleware=[accessCheck,thunk,refreshingIdleTime];var store=createStore(AllReducer,process.env.NODE_ENV===\"development\"?composeEnhanchers(applyMiddleware.apply(void 0,combineMiddleware)):compose(applyMiddleware.apply(void 0,combineMiddleware)));return store;}","map":{"version":3,"names":["createStore","applyMiddleware","compose","accessCheck","refreshingIdleTime","thunk","AllReducer","composeEnhanchers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","configureStore","combineMiddleware","store","process","env","NODE_ENV"],"sources":["/Users/rezaaditya/Documents/github/mui-app-v3/src/Redux/index.js"],"sourcesContent":["import { createStore, applyMiddleware, compose } from \"redux\";\nimport { accessCheck, refreshingIdleTime } from \"./middleware\";\nimport thunk from \"redux-thunk\";\nimport AllReducer from './reducers';\n\nconst composeEnhanchers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nexport default function configureStore() {\n  const combineMiddleware = [accessCheck, thunk, refreshingIdleTime];\n  const store = createStore(\n    AllReducer,\n    process.env.NODE_ENV === \"development\"\n      ? composeEnhanchers(applyMiddleware(...combineMiddleware))\n      : compose(applyMiddleware(...combineMiddleware))\n  );\n\n  return store;\n}"],"mappings":"AAAA,OAASA,WAAW,CAAEC,eAAe,CAAEC,OAAO,KAAQ,OAAO,CAC7D,OAASC,WAAW,CAAEC,kBAAkB,KAAQ,cAAc,CAC9D,MAAOC,MAAK,KAAM,aAAa,CAC/B,MAAOC,WAAU,KAAM,YAAY,CAEnC,GAAMC,kBAAiB,CAAGC,MAAM,CAACC,oCAAoC,EAAIP,OAAO,CAChF,cAAe,SAASQ,eAAc,EAAG,CACvC,GAAMC,kBAAiB,CAAG,CAACR,WAAW,CAAEE,KAAK,CAAED,kBAAkB,CAAC,CAClE,GAAMQ,MAAK,CAAGZ,WAAW,CACvBM,UAAU,CACVO,OAAO,CAACC,GAAG,CAACC,QAAQ,GAAK,aAAa,CAClCR,iBAAiB,CAACN,eAAe,cAAIU,iBAAiB,CAAC,CAAC,CACxDT,OAAO,CAACD,eAAe,cAAIU,iBAAiB,CAAC,CAAC,CACnD,CAED,MAAOC,MAAK,CACd"},"metadata":{},"sourceType":"module","externalDependencies":[]}