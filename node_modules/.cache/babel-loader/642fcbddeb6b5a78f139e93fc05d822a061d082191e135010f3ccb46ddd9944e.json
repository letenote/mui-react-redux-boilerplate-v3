{"ast":null,"code":"import _toConsumableArray from \"/Users/rezaaditya/Documents/github/mui-react-redux-boilerplate-v3/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport { plusCalc, subtractCalc } from \"../utils/calc\";\nfunction getMaxFloatHeight(configs) {\n  if (!configs.length) return 0;\n  if (configs.length === 1) return plusCalc(configs[0].height, configs[0].top);\n  return \"max(\".concat(configs.map(function (c) {\n    return plusCalc(c.height, c.top);\n  }).join(\", \"), \")\");\n}\nfunction sumHeight(configs) {\n  if (!configs.length) return 0;\n  return plusCalc.apply(void 0, _toConsumableArray(configs.map(function (c) {\n    return c.height;\n  })));\n}\nexport var StackedHeaders = function StackedHeaders(configs) {\n  var nonRelativeConfigs = [];\n  configs.forEach(function (c) {\n    if (!!c && c.position !== \"relative\") {\n      nonRelativeConfigs.push(c);\n    }\n  });\n  var maxNonRelativeHeight = getMaxFloatHeight(nonRelativeConfigs);\n  var totalHeight = sumHeight(configs.filter(function (c) {\n    return !!c;\n  })); // for offset height\n\n  var diffHeight = subtractCalc(totalHeight, maxNonRelativeHeight); // for -marginTop\n\n  return {\n    totalHeight: totalHeight,\n    diffHeight: diffHeight\n  };\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}