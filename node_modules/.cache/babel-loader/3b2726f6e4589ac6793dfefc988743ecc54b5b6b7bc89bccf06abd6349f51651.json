{"ast":null,"code":"import { BREAKPOINT_KEYS } from \"./muiBreakpoints\";\nexport var pickNearestBreakpoint = (value, currentBreakpoint) => {\n  if (!value || !currentBreakpoint) return undefined;\n  var breakpointIndex = BREAKPOINT_KEYS.indexOf(currentBreakpoint);\n  if (breakpointIndex === -1) {\n    throw new Error(\"Breakpoint: \\\"\".concat(currentBreakpoint, \"\\\" does not exist in [\").concat(BREAKPOINT_KEYS.join(\",\"), \"]\"));\n  } // [breakpoint, ..., 'xs']\n\n  var possibleBreakpoints = BREAKPOINT_KEYS.slice(0, BREAKPOINT_KEYS.indexOf(currentBreakpoint) + 1).reverse();\n  var result = value[currentBreakpoint];\n  if (result) return result; // return the first valid value\n\n  for (var bp of possibleBreakpoints) {\n    if (result !== undefined) return result;\n    result = value[bp];\n  }\n  return result;\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}