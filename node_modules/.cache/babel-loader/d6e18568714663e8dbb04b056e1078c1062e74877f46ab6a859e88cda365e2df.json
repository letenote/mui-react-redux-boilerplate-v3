{"ast":null,"code":"import React from \"react\";\nimport { debounce } from \"@mui/material/utils\";\nimport { useTheme } from \"@mui/material/styles\";\nimport { mapWidthToScreen } from \"../utils/mapWidthToScreen\";\nimport { useWindowCtx } from \"../WindowContext\";\nfunction getWindowWidth(w) {\n  return typeof w === \"object\" ? w.innerWidth : undefined;\n}\nexport var useScreen = () => {\n  var {\n    breakpoints\n  } = useTheme();\n  var {\n    iWindow\n  } = useWindowCtx();\n  var getScreen = () => mapWidthToScreen(getWindowWidth(iWindow), breakpoints);\n  var [screen, setScreen] = React.useState(getScreen());\n  var updater = React.useRef(debounce(() => {\n    setScreen(getScreen());\n  }, 200));\n  React.useEffect(() => {\n    if (iWindow !== undefined) {\n      iWindow.addEventListener(\"resize\", updater.current);\n      return () => {\n        iWindow.removeEventListener(\"resize\", updater.current);\n      };\n    }\n  }, []);\n  return screen;\n};","map":{"version":3,"names":["React","debounce","useTheme","mapWidthToScreen","useWindowCtx","getWindowWidth","w","innerWidth","undefined","useScreen","breakpoints","iWindow","getScreen","screen","setScreen","useState","updater","useRef","useEffect","addEventListener","current","removeEventListener"],"sources":["/Users/rezaaditya/Documents/github/mui-app-v3/node_modules/@mui-treasury/layout/esm/hooks/useScreen.js"],"sourcesContent":["import React from \"react\";\nimport { debounce } from \"@mui/material/utils\";\nimport { useTheme } from \"@mui/material/styles\";\nimport { mapWidthToScreen } from \"../utils/mapWidthToScreen\";\nimport { useWindowCtx } from \"../WindowContext\";\n\nfunction getWindowWidth(w) {\n  return typeof w === \"object\" ? w.innerWidth : undefined;\n}\n\nexport var useScreen = () => {\n  var {\n    breakpoints\n  } = useTheme();\n  var {\n    iWindow\n  } = useWindowCtx();\n\n  var getScreen = () => mapWidthToScreen(getWindowWidth(iWindow), breakpoints);\n\n  var [screen, setScreen] = React.useState(getScreen());\n  var updater = React.useRef(debounce(() => {\n    setScreen(getScreen());\n  }, 200));\n  React.useEffect(() => {\n    if (iWindow !== undefined) {\n      iWindow.addEventListener(\"resize\", updater.current);\n      return () => {\n        iWindow.removeEventListener(\"resize\", updater.current);\n      };\n    }\n  }, []);\n  return screen;\n};"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,qBAAqB;AAC9C,SAASC,QAAQ,QAAQ,sBAAsB;AAC/C,SAASC,gBAAgB,QAAQ,2BAA2B;AAC5D,SAASC,YAAY,QAAQ,kBAAkB;AAE/C,SAASC,cAAc,CAACC,CAAC,EAAE;EACzB,OAAO,OAAOA,CAAC,KAAK,QAAQ,GAAGA,CAAC,CAACC,UAAU,GAAGC,SAAS;AACzD;AAEA,OAAO,IAAIC,SAAS,GAAG,MAAM;EAC3B,IAAI;IACFC;EACF,CAAC,GAAGR,QAAQ,EAAE;EACd,IAAI;IACFS;EACF,CAAC,GAAGP,YAAY,EAAE;EAElB,IAAIQ,SAAS,GAAG,MAAMT,gBAAgB,CAACE,cAAc,CAACM,OAAO,CAAC,EAAED,WAAW,CAAC;EAE5E,IAAI,CAACG,MAAM,EAAEC,SAAS,CAAC,GAAGd,KAAK,CAACe,QAAQ,CAACH,SAAS,EAAE,CAAC;EACrD,IAAII,OAAO,GAAGhB,KAAK,CAACiB,MAAM,CAAChB,QAAQ,CAAC,MAAM;IACxCa,SAAS,CAACF,SAAS,EAAE,CAAC;EACxB,CAAC,EAAE,GAAG,CAAC,CAAC;EACRZ,KAAK,CAACkB,SAAS,CAAC,MAAM;IACpB,IAAIP,OAAO,KAAKH,SAAS,EAAE;MACzBG,OAAO,CAACQ,gBAAgB,CAAC,QAAQ,EAAEH,OAAO,CAACI,OAAO,CAAC;MACnD,OAAO,MAAM;QACXT,OAAO,CAACU,mBAAmB,CAAC,QAAQ,EAAEL,OAAO,CAACI,OAAO,CAAC;MACxD,CAAC;IACH;EACF,CAAC,EAAE,EAAE,CAAC;EACN,OAAOP,MAAM;AACf,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}