{"ast":null,"code":"function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nimport React from \"react\";\nimport Container from \"@mui/material/Container\";\nimport { styled, useThemeProps } from \"@mui/material/styles\";\nvar InsetContainerRoot = styled(Container, {\n  name: \"AppInsetContainer\",\n  slot: \"Root\",\n  overridesResolver: (props, styles) => styles.root\n})({\n  display: \"flex\",\n  flexFlow: \"row nowrap\",\n  flexGrow: 1,\n  '& > *:not([class*=\"AppInsetSidebar\"])': {\n    flexGrow: 1,\n    overflow: \"auto\"\n  }\n});\nexport var InsetContainer = _ref => {\n  var {\n      children,\n      leftSidebar,\n      rightSidebar\n    } = _ref,\n    inProps = _objectWithoutProperties(_ref, [\"children\", \"leftSidebar\", \"rightSidebar\"]);\n  var props = useThemeProps({\n    props: inProps,\n    name: \"AppInsetContainer\"\n  });\n  return /*#__PURE__*/React.createElement(InsetContainerRoot, props, leftSidebar && /*#__PURE__*/React.cloneElement(leftSidebar, {\n    anchor: \"left\"\n  }), children, rightSidebar && /*#__PURE__*/React.cloneElement(rightSidebar, {\n    anchor: \"right\"\n  }));\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}