{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n  return target;\n}\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nimport React, { useContext } from \"react\";\nimport cx from \"clsx\";\nimport { styled, useThemeProps } from \"@mui/material/styles\";\nimport Drawer, { drawerClasses } from \"@mui/material/Drawer\";\nimport { useLayoutCtx } from \"../Root/Root\";\nimport { useScreen } from \"../hooks/useScreen\";\nimport { pickNearestBreakpoint } from \"../utils/pickNearestBreakpoint\";\nimport { useSidebarAutoCollapse } from \"../hooks/useSidebarAutoCollapse\";\nimport { EDGE_SIDEBAR_EXPAND_DELAY, CSS_TRANSITION } from \"../utils/constant\";\nimport { EdgeOffset } from \"./EdgeOffset\";\nimport { useWindowCtx } from \"../WindowContext\";\nexport var SidebarContext = /*#__PURE__*/React.createContext(undefined);\nexport var useSidebarCtx = () => {\n  var ctx = useContext(SidebarContext);\n  if (!ctx) {\n    throw new Error(\"useSidebarCtx must be called under <EdgeSidebar />\");\n  }\n  return ctx;\n};\nexport var useLooseSidebarCtx = () => {\n  return useContext(SidebarContext);\n};\nvar hasAutoExpanded = config => {\n  return !!config && (typeof config.autoExpanded === \"boolean\" || typeof config.uncollapsedOnHover === \"boolean\");\n};\nvar EdgeSidebarRoot = styled(Drawer, {\n  name: \"AppEdgeSidebar\",\n  slot: \"Root\",\n  overridesResolver: (props, styles) => styles.root\n})(_ref => {\n  var {\n    ownerState\n  } = _ref;\n  return _objectSpread({}, (ownerState.entered || ownerState.variant === \"permanent\" || ownerState.variant === \"persistent\") && {\n    [\"& .\".concat(drawerClasses.paper)]: {\n      transition: \"\".concat(CSS_TRANSITION, \" !important\"),\n      transitionProperty: \"all !important\"\n    }\n  });\n});\nexport var EdgeSidebar = _ref2 => {\n  var _layoutState$sidebarI, _iDocument$body, _props$ModalProps, _props$PaperProps3, _props$PaperProps4, _props$PaperProps5, _builder$sidebarId;\n  var {\n      children\n    } = _ref2,\n    inProps = _objectWithoutProperties(_ref2, [\"children\"]);\n  var props = useThemeProps({\n    props: inProps,\n    name: \"AppEdgeSidebar\"\n  });\n  var {\n    anchor\n  } = props;\n  if (!anchor) {\n    throw new Error('Missing prop \"anchor\" on EdgeSidebar component');\n  }\n  var screen = useScreen();\n  var {\n    iDocument\n  } = useWindowCtx();\n  var ctx = useLayoutCtx();\n  var {\n    builder,\n    state: layoutState,\n    setOpen\n  } = ctx;\n  var sidebarId = \"\".concat(anchor, \"EdgeSidebar\");\n  var edgeSidebar = builder[sidebarId];\n  var sidebarState = layoutState[sidebarId];\n  var config = pickNearestBreakpoint(edgeSidebar === null || edgeSidebar === void 0 ? void 0 : edgeSidebar.config, screen);\n  useSidebarAutoCollapse(sidebarId); // auto-expanded feature\n\n  var [entered, setEntered] = React.useState(false);\n  var [expanded, setExpanded] = React.useState(false);\n  var isMouseOverSidebar = React.useRef(false);\n  var isAutoExpanded = hasAutoExpanded(config) && (config.autoExpanded || config.uncollapsedOnHover);\n  var onMouseEnter = event => {\n    var _props$PaperProps, _props$PaperProps$onM;\n    (_props$PaperProps = props.PaperProps) === null || _props$PaperProps === void 0 ? void 0 : (_props$PaperProps$onM = _props$PaperProps.onMouseEnter) === null || _props$PaperProps$onM === void 0 ? void 0 : _props$PaperProps$onM.call(_props$PaperProps, event);\n    if (sidebarState !== null && sidebarState !== void 0 && sidebarState.collapsed && isAutoExpanded) {\n      isMouseOverSidebar.current = true;\n      setTimeout(() => {\n        if (isMouseOverSidebar.current) {\n          setExpanded(true);\n        }\n      }, EDGE_SIDEBAR_EXPAND_DELAY);\n    }\n  };\n  var onMouseLeave = event => {\n    var _props$PaperProps2, _props$PaperProps2$on;\n    (_props$PaperProps2 = props.PaperProps) === null || _props$PaperProps2 === void 0 ? void 0 : (_props$PaperProps2$on = _props$PaperProps2.onMouseLeave) === null || _props$PaperProps2$on === void 0 ? void 0 : _props$PaperProps2$on.call(_props$PaperProps2, event);\n    isMouseOverSidebar.current = false;\n    setExpanded(false);\n  };\n  var onEntered = function onEntered() {\n    var _props$SlideProps, _props$SlideProps$onE;\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    // @ts-ignore\n    (_props$SlideProps = props.SlideProps) === null || _props$SlideProps === void 0 ? void 0 : (_props$SlideProps$onE = _props$SlideProps.onEntered) === null || _props$SlideProps$onE === void 0 ? void 0 : _props$SlideProps$onE.call(_props$SlideProps, ...args);\n    setEntered(true);\n  };\n  var onExit = function onExit() {\n    var _props$SlideProps2, _props$SlideProps2$on;\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    // @ts-ignore\n    (_props$SlideProps2 = props.SlideProps) === null || _props$SlideProps2 === void 0 ? void 0 : (_props$SlideProps2$on = _props$SlideProps2.onExit) === null || _props$SlideProps2$on === void 0 ? void 0 : _props$SlideProps2$on.call(_props$SlideProps2, ...args);\n    setEntered(false);\n  };\n  React.useEffect(() => {\n    if (!(sidebarState !== null && sidebarState !== void 0 && sidebarState.collapsed)) {\n      setExpanded(false);\n    }\n  }, [sidebarState === null || sidebarState === void 0 ? void 0 : sidebarState.collapsed]);\n  var sidebarValue = React.useMemo(() => ({\n    id: sidebarId,\n    anchor,\n    expanded,\n    setExpanded\n  }), [sidebarId, anchor, expanded, setExpanded]);\n  if (!screen) return null;\n  if (!edgeSidebar || !edgeSidebar.id) return null;\n  var responsiveVariant = edgeSidebar.getDrawerVariant();\n  var variant = pickNearestBreakpoint(responsiveVariant, screen);\n  if (!variant) return null;\n  var ownerState = _objectSpread(_objectSpread({}, props), {}, {\n    entered,\n    variant\n  });\n  return /*#__PURE__*/React.createElement(SidebarContext.Provider, {\n    value: sidebarValue\n  }, /*#__PURE__*/React.createElement(EdgeSidebarRoot, _extends({}, props, {\n    open: (_layoutState$sidebarI = layoutState[sidebarId]) === null || _layoutState$sidebarI === void 0 ? void 0 : _layoutState$sidebarI.open,\n    anchor: anchor,\n    variant: variant,\n    ownerState: ownerState,\n    onClose: function onClose() {\n      var _props$onClose;\n      for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        args[_key3] = arguments[_key3];\n      }\n      (_props$onClose = props.onClose) === null || _props$onClose === void 0 ? void 0 : _props$onClose.call(props, ...args);\n      setOpen(sidebarId, false);\n    },\n    SlideProps: _objectSpread(_objectSpread({}, props.SlideProps), {}, {\n      onEntered,\n      onExit\n    }),\n    ModalProps: _objectSpread(_objectSpread({}, props.ModalProps), {}, {\n      container: (_iDocument$body = iDocument === null || iDocument === void 0 ? void 0 : iDocument.body) !== null && _iDocument$body !== void 0 ? _iDocument$body : (_props$ModalProps = props.ModalProps) === null || _props$ModalProps === void 0 ? void 0 : _props$ModalProps.container\n    }),\n    PaperProps: _objectSpread(_objectSpread({}, props.PaperProps), {}, {\n      className: cx((_props$PaperProps3 = props.PaperProps) === null || _props$PaperProps3 === void 0 ? void 0 : _props$PaperProps3.className, expanded && \"AppEdgeSidebar-paperExpanded\"),\n      style: _objectSpread(_objectSpread({}, (_props$PaperProps4 = props.PaperProps) === null || _props$PaperProps4 === void 0 ? void 0 : _props$PaperProps4.style), expanded && {\n        width: config === null || config === void 0 ? void 0 : config.width,\n        overflow: \"visible\"\n      }),\n      onMouseEnter,\n      onMouseLeave,\n      sx: _objectSpread(_objectSpread({}, (_props$PaperProps5 = props.PaperProps) === null || _props$PaperProps5 === void 0 ? void 0 : _props$PaperProps5.sx), (_builder$sidebarId = builder[sidebarId]) === null || _builder$sidebarId === void 0 ? void 0 : _builder$sidebarId.getSxProps())\n    })\n  }), variant && variant !== \"temporary\" && /*#__PURE__*/React.createElement(EdgeOffset, {\n    sidebarId: sidebarId\n  }), typeof children === \"function\" ? children(_objectSpread(_objectSpread({}, ctx), {}, {\n    expanded,\n    entered,\n    isMouseOverSidebar: isMouseOverSidebar.current\n  })) : children));\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}