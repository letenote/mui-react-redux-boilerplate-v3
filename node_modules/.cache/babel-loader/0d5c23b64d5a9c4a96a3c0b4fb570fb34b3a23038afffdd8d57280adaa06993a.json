{"ast":null,"code":"import _slicedToArray from \"/Users/rezaaditya/Documents/github/mui-react-redux-boilerplate-v3/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport React from \"react\";\nimport { debounce } from \"@mui/material/utils\";\nimport { useTheme } from \"@mui/material/styles\";\nimport { mapWidthToScreen } from \"../utils/mapWidthToScreen\";\nimport { useWindowCtx } from \"../WindowContext\";\nfunction getWindowWidth(w) {\n  return typeof w === \"object\" ? w.innerWidth : undefined;\n}\nexport var useScreen = function useScreen() {\n  var _useTheme = useTheme(),\n    breakpoints = _useTheme.breakpoints;\n  var _useWindowCtx = useWindowCtx(),\n    iWindow = _useWindowCtx.iWindow;\n  var getScreen = function getScreen() {\n    return mapWidthToScreen(getWindowWidth(iWindow), breakpoints);\n  };\n  var _React$useState = React.useState(getScreen()),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    screen = _React$useState2[0],\n    setScreen = _React$useState2[1];\n  var updater = React.useRef(debounce(function () {\n    setScreen(getScreen());\n  }, 200));\n  React.useEffect(function () {\n    if (iWindow !== undefined) {\n      iWindow.addEventListener(\"resize\", updater.current);\n      return function () {\n        iWindow.removeEventListener(\"resize\", updater.current);\n      };\n    }\n  }, []);\n  return screen;\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}