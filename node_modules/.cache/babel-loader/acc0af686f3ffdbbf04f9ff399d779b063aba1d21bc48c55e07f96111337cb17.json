{"ast":null,"code":"import _createForOfIteratorHelper from \"/Users/rezaaditya/Documents/github/mui-app-v3/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n  return target;\n}\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nimport { combineBreakpoints } from \"../utils/combineBreakpoints\";\nimport { pickNearestBreakpoint } from \"../utils/pickNearestBreakpoint\";\nexport var getEdgeOffsetSxProps = function getEdgeOffsetSxProps(edgeSidebar, sxClippedHeight) {\n  var result = {};\n  if (edgeSidebar && edgeSidebar.id) {\n    var breakpoints = combineBreakpoints(edgeSidebar.config, sxClippedHeight);\n    var _iterator = _createForOfIteratorHelper(breakpoints),\n      _step;\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var key = _step.value;\n        var _pickNearestBreakpoin;\n        var bp = key;\n        result[bp] = (_pickNearestBreakpoin = pickNearestBreakpoint(sxClippedHeight, bp)) !== null && _pickNearestBreakpoin !== void 0 ? _pickNearestBreakpoin : 0;\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n  }\n  return _objectSpread({}, Object.keys(result).length > 0 && {\n    height: result\n  });\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}