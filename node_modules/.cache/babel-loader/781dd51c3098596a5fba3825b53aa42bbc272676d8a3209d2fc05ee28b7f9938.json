{"ast":null,"code":"import _createForOfIteratorHelper from \"/Users/rezaaditya/Documents/github/mui-app-v3/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _classCallCheck from \"/Users/rezaaditya/Documents/github/mui-app-v3/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/rezaaditya/Documents/github/mui-app-v3/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"/Users/rezaaditya/Documents/github/mui-app-v3/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _inherits from \"/Users/rezaaditya/Documents/github/mui-app-v3/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/rezaaditya/Documents/github/mui-app-v3/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n  return target;\n}\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nimport { subtractCalc } from \"../utils/calc\";\nimport { pickNearestBreakpoint } from \"../utils/pickNearestBreakpoint\";\nimport { ResponsiveBuilder } from \"../shared/ResponsiveBuilder\";\nimport { flattenLoose, flattenStrict } from \"../utils/flattenResponsive\";\nimport { toValidCssValue } from \"../utils/toValidCssValue\";\nexport var InsetSidebarBuilder = /*#__PURE__*/function (_ResponsiveBuilder) {\n  _inherits(InsetSidebarBuilder, _ResponsiveBuilder);\n  var _super = _createSuper(InsetSidebarBuilder);\n  function InsetSidebarBuilder(params) {\n    var _this;\n    _classCallCheck(this, InsetSidebarBuilder);\n    _this = _super.call(this, params);\n    _defineProperty(_assertThisInitialized(_this), \"effectedBy\", {});\n    return _this;\n  }\n  _createClass(InsetSidebarBuilder, [{\n    key: \"getFixedArea\",\n    value: function getFixedArea() {\n      var modifier = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n      return flattenLoose(this.generateSx(function (config, bp) {\n        return config.position === \"fixed\" ? \"\".concat(modifier * 9999, \"px\") : bp === \"xs\" ? undefined : \"initial\";\n      }));\n    }\n  }, {\n    key: \"getSxBody\",\n    value: function getSxBody() {\n      var anchor = this.anchor;\n      var height = {};\n      var header = this.effectedBy.header;\n      if (header) {\n        var _header$getSxHeight = header.getSxHeight(),\n          responsiveHeight = _header$getSxHeight.height;\n        var breakpoints = this.mergeBreakpoints(responsiveHeight !== null && responsiveHeight !== void 0 ? responsiveHeight : []);\n        var _iterator = _createForOfIteratorHelper(breakpoints),\n          _step;\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var bp = _step.value;\n            var insetConfig = pickNearestBreakpoint(this.config, bp);\n            if ((insetConfig === null || insetConfig === void 0 ? void 0 : insetConfig.position) === \"absolute\") {\n              var headerHeight = pickNearestBreakpoint(responsiveHeight, bp);\n              height[bp] = headerHeight === 0 || headerHeight === \"0px\" ? \"100vh\" : subtractCalc(\"100vh\", headerHeight);\n            }\n            if ((insetConfig === null || insetConfig === void 0 ? void 0 : insetConfig.position) === \"fixed\") height[bp] = \"100%\";\n            if ((insetConfig === null || insetConfig === void 0 ? void 0 : insetConfig.position) === \"sticky\") height[bp] = \"initial\";\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n      }\n      return _objectSpread(_objectSpread({\n        height: flattenLoose(height),\n        width: flattenLoose(this.generateSx(function (config) {\n          return config.position === \"fixed\" ? \"initial\" : \"100%\";\n        })),\n        position: flattenLoose(this.generateSx(function (config) {\n          return config.position;\n        })),\n        top: flattenLoose(this.generateSx(function (config) {\n          var _config$top;\n          return (_config$top = config.top) !== null && _config$top !== void 0 ? _config$top : 0;\n        }))\n      }, anchor === \"left\" && {\n        marginLeft: this.getFixedArea(-1),\n        paddingLeft: this.getFixedArea()\n      }), anchor === \"right\" && {\n        marginRight: this.getFixedArea(-1),\n        paddingRight: this.getFixedArea()\n      });\n    }\n  }, {\n    key: \"getSxRoot\",\n    value: function getSxRoot() {\n      return {\n        display: flattenStrict(this.getSxDisplay(\"block\")),\n        width: flattenLoose(this.generateSx(function (config) {\n          return toValidCssValue(config.width);\n        }))\n      };\n    }\n  }, {\n    key: \"getOccupiedSpace\",\n    value: function getOccupiedSpace() {\n      return flattenStrict(this.generateSxWithHidden({\n        assignValue: function assignValue(config) {\n          return toValidCssValue(config.width);\n        },\n        hiddenValue: \"0px\",\n        strict: true\n      }));\n    }\n  }]);\n  return InsetSidebarBuilder;\n}(ResponsiveBuilder);","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}