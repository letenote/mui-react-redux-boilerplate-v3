{"ast":null,"code":"import { createWidthInterface } from \"../Width/WidthModel\";\nimport { combineBreakpoints } from \"../utils/combineBreakpoints\";\nimport { pickNearestBreakpoint } from \"../utils/pickNearestBreakpoint\";\nimport { toValidCssValue } from \"../utils/toValidCssValue\";\nexport var getContentSxProps = (modules, id) => {\n  var _leftEdgeSidebar$getO, _rightEdgeSidebar$get;\n  var result = {\n    width: {},\n    marginLeft: {},\n    marginRight: {}\n  };\n  var {\n    leftEdgeSidebar,\n    rightEdgeSidebar\n  } = modules;\n  var leftOccupiedSpace = (_leftEdgeSidebar$getO = leftEdgeSidebar === null || leftEdgeSidebar === void 0 ? void 0 : leftEdgeSidebar.getOccupiedSpace()) !== null && _leftEdgeSidebar$getO !== void 0 ? _leftEdgeSidebar$getO : {};\n  var rightOccupiedSpace = (_rightEdgeSidebar$get = rightEdgeSidebar === null || rightEdgeSidebar === void 0 ? void 0 : rightEdgeSidebar.getOccupiedSpace()) !== null && _rightEdgeSidebar$get !== void 0 ? _rightEdgeSidebar$get : {};\n  var breakpoints = combineBreakpoints(leftOccupiedSpace, rightOccupiedSpace);\n  for (var key of breakpoints) {\n    var bp = key;\n    var effectLeft = createWidthInterface(0);\n    if (leftEdgeSidebar) {\n      effectLeft = createWidthInterface(leftEdgeSidebar.isFlexiblePersistent(bp, id) ? 0 : pickNearestBreakpoint(leftOccupiedSpace, bp));\n      var occupiedSpace = leftOccupiedSpace[bp];\n      if (occupiedSpace) {\n        result.marginLeft[bp] = toValidCssValue(occupiedSpace);\n      }\n    }\n    var effectRight = createWidthInterface(0);\n    if (rightEdgeSidebar) {\n      effectRight = createWidthInterface(rightEdgeSidebar.isFlexiblePersistent(bp, id) ? 0 : pickNearestBreakpoint(rightOccupiedSpace, bp));\n      var _occupiedSpace = rightOccupiedSpace[bp];\n      if (_occupiedSpace) {\n        result.marginRight[bp] = toValidCssValue(_occupiedSpace);\n      }\n    }\n    result.width[bp] = effectLeft.combine(effectRight).getStyle().width;\n  }\n  return result;\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}