"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ContentMockup = exports.Paragraph = void 0;

var _react = _interopRequireDefault(require("react"));

var _Divider = _interopRequireDefault(require("@mui/material/Divider"));

var _Stack = _interopRequireDefault(require("@mui/material/Stack"));

var _shape = require("../shape");

var _utils = require("../utils");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && Symbol.iterator in Object(iter)) return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

var Paragraph = function Paragraph(_ref) {
  var _ref$lineCount = _ref.lineCount,
      lineCount = _ref$lineCount === void 0 ? 5 : _ref$lineCount,
      sx = _ref.sx;
  return /*#__PURE__*/_react["default"].createElement(_react["default"].Fragment, null, _toConsumableArray(Array(lineCount)).map(function (_, index) {
    return /*#__PURE__*/_react["default"].createElement(_shape.Square, {
      key: index,
      sx: _extends({
        height: 16,
        width: (0, _utils.randomBetween)(96, 100, "%")
      }, index !== 0 && {
        mt: 1.5
      }, sx)
    });
  }));
};

exports.Paragraph = Paragraph;

var ContentMockup = function ContentMockup() {
  return /*#__PURE__*/_react["default"].createElement("div", null, /*#__PURE__*/_react["default"].createElement(_shape.Square, {
    sx: {
      height: 32,
      width: 160
    }
  }), /*#__PURE__*/_react["default"].createElement(_shape.Square, {
    sx: {
      height: 18,
      width: 120,
      mt: 1.5
    }
  }), /*#__PURE__*/_react["default"].createElement("br", null), /*#__PURE__*/_react["default"].createElement("br", null), /*#__PURE__*/_react["default"].createElement(Paragraph, null), /*#__PURE__*/_react["default"].createElement("br", null), /*#__PURE__*/_react["default"].createElement(_Divider["default"], null), /*#__PURE__*/_react["default"].createElement("br", null), /*#__PURE__*/_react["default"].createElement(Paragraph, null), /*#__PURE__*/_react["default"].createElement("br", null), /*#__PURE__*/_react["default"].createElement("br", null), /*#__PURE__*/_react["default"].createElement(_Stack["default"], {
    direction: "row",
    spacing: 1
  }, /*#__PURE__*/_react["default"].createElement(_shape.Square, {
    sx: {
      height: 200,
      flexGrow: 1
    }
  }), /*#__PURE__*/_react["default"].createElement(_shape.Square, {
    sx: {
      height: 200,
      flexGrow: 1
    }
  }), /*#__PURE__*/_react["default"].createElement(_shape.Square, {
    sx: {
      height: 200,
      flexGrow: 1
    }
  })), /*#__PURE__*/_react["default"].createElement("br", null), /*#__PURE__*/_react["default"].createElement("br", null), /*#__PURE__*/_react["default"].createElement(_shape.Square, {
    sx: {
      height: 32,
      width: 240,
      mx: "auto"
    }
  }), /*#__PURE__*/_react["default"].createElement(_shape.Square, {
    sx: {
      height: 18,
      width: 120,
      mt: 1.5,
      mx: "auto"
    }
  }), /*#__PURE__*/_react["default"].createElement("br", null), /*#__PURE__*/_react["default"].createElement("br", null), /*#__PURE__*/_react["default"].createElement(Paragraph, {
    sx: {
      mx: "auto"
    }
  }), /*#__PURE__*/_react["default"].createElement("br", null), /*#__PURE__*/_react["default"].createElement(_Stack["default"], {
    direction: "row",
    spacing: 1
  }, /*#__PURE__*/_react["default"].createElement(_shape.Square, {
    sx: {
      height: 100,
      flexGrow: 1
    }
  }), /*#__PURE__*/_react["default"].createElement(_shape.Square, {
    sx: {
      height: 100,
      flexGrow: 1
    }
  }), /*#__PURE__*/_react["default"].createElement(_shape.Square, {
    sx: {
      height: 100,
      flexGrow: 1
    }
  }), /*#__PURE__*/_react["default"].createElement(_shape.Square, {
    sx: {
      height: 100,
      flexGrow: 1
    }
  })));
};

exports.ContentMockup = ContentMockup;